//3) INTERFACCE (dati minimi che devono per forza essere presenti)

//per funzioni
interface Func { 
	//per definire funzioni (params e valore ritornato)
	(x: number, y: number): number;
}
/////////////////////////////////////////////////////////

//per array
interface Arr { 
	//per definire array
	[index:string]: string;
}
/////////////////////////////////////////////////////////

//per array di oggetti
interface ArrObj { 
	//per definire array di oggetti
	[index: number]: {id: number, label: string}; 
}
//////////////////////////////////////////////////////

//esempio generico
interface ClockInterface {
	//ATTRIBUTO
    currentTime: Date;
	//FUNZIONE
    setTime(d: Date);
}

class Clock implements ClockInterface {
    currentTime: Date;
    setTime(d: Date) {
        this.currentTime = d;
    }
    constructor(h: number, m: number) { }
}
////////////////////////////////////////////////////////

//ereditarieta'
interface Shape {
    color: string;
}

interface PenStroke {
    penWidth: number;
}

interface Square extends Shape, PenStroke {
    sideLength: number;
}

let square = <Square>{};
square.color = "blue";
square.sideLength = 10;
square.penWidth = 5.0;
////////////////////////////////////////////////////////////